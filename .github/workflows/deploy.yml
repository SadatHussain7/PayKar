name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2  
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/Dockerfile.user
        push: true
        tags: sadathussain325/paykar-userapp:latest

    - name: Verify Pushed Image
      run: docker pull sadathussain325/paykar-userapp:latest  

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker pull sadathussain325/paykar-userapp:latest
          sudo docker stop paykar-userapp || true
          sudo docker rm paykar-userapp || true
          sudo docker run -d --name paykar-userapp -p 3005:3000 sadathussain325/paykar-userapp:latest
        timeout: '60s'
        # TODO: Add DB_URL as a secret and pass it to the container.


        # Future Work that can be done:
        # Try 'Elastic Beanstalk' to get the benefits of auto-scaling, load balancing, and monitoring.
        # ECR for storing docker images.
        # ECS for running docker containers.
        # OR 
        # Try using ASG (Auto Scaling Group) with EC2 instances.
        # Use 'Terraform' for Infrastructure as Code.
